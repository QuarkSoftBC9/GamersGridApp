@model GamersGridApp.Core.ViewModels.AddLOLAccountViewmodel
@{
    ViewBag.Title = "LolApi";
}

<h2>LolApi</h2>
<div class="jumbotron"> </div>
@*/* if (Model.HasAccount)
    {
        <div class="jumbotron"> ENTER CONFIRMATION MESSAGE if the user want to change connected Account You already connected your account to: @Model.UserName</div>
    }*@



@Html.LabelFor(r => r.Region)
@Html.DropDownListFor(r => r.Region, new SelectList(Model.AccountRegionsList), "--Select--", new { @class = "form-control required js-region", name = "region", id = "region-js" })

@Html.LabelFor(u => u.UserName)
@Html.TextBoxFor(u => u.UserName, new { @class = "form=control required js-username", name = "username", id = "username-js" })

<button type="submit" class="btn js-validate-user" id="submitLOL">Save</button>

@section scripts
{
    <script>
        let APIController = (function () {
            let sendAccount = function (account) {
               
            }

            return {
                addAccount: function (account) {
                    //validation for account to be already claimed
                    $.post("/api/LOLAccounts", { userName: account.username, region: account.region })
                        .done(function (returnVal) {
                            console.log(returnVal)
                        })
                        .fail(function (returnVal) {
                            alert("Something failed");
                            console.log(returnVal)
                        })
                },
                GetKDA: function () {
                    $.get("/api/LOLAccounts", function (stats) {
                        console.log('call was made.')
                        console.log(stats)
                    })
                        .done(function (stats) {
                            return stats
                        })
                        .fail(function () {
                            alert("Something went wrong while getting your stats");
                            return {};
                        });
                }
            }
        })();
        let UIController = (function () {
            DOMStrings = {
                usernameInput: '#username-js',
                regionInput: '#region-js',
                getLOLAccount: '.js-validate-user'
            }
            return {
                GetDOMStrings: function () {
                    return DOMStrings
                },
                SelectAccData: function () {
                    const userName = document.querySelector(DOMStrings.usernameInput).value;
                    const userRegion = document.querySelector(DOMStrings.regionInput).value;
                    return {
                        username: userName,
                        region: userRegion
                    }
                },
                ShowStats: function (stats) {
                    console.log('%c Show Stats UICntrl', 'color: #bada55 ')
                    console.log(stats);
                    $(DOMStrings.lolRank).textContent = stats[0].tier + " " + stats[0].rank;
                }
            }
        })();
        MainController = (function (UICntrl, APICntrl) {
            let SetupEventListeners = function () {
                let DOM = UICntrl.GetDOMStrings();
                $(DOM.getLOLAccount).click(GetLOLAcc);
            }
            let GetLOLKDA = function () {
                APICntrl.GetKDA();
            }
            let GetLOLAcc = function (event) {
                const account = UICntrl.SelectAccData();
                console.log(account);
                APICntrl.addAccount(account);
            }
            let GetLOLStats = function (event) {
                const stats = APICntrl.GetAccStats();
                console.log('%c Show Stats MainController', 'color: #bada55 ')
                UICntrl.ShowStats(stats);
            }
            return {
                init: function () {
                    console.log('Application has started');
                    SetupEventListeners();
                }
            }
        })(UIController, APIController);
        MainController.init();
    </script>
}
